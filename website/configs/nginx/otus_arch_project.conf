# Обработка 80 порта
server
{
	listen 80;
	server_name otus_arch_project;

	charset utf8;

	access_log /var/log/nginx/otus_arch_project-access.log;
	error_log /var/log/nginx/otus_arch_project-error.log;

	location /robots.txt
	{
		root '/home/andreyakor/Документы/OTUS/Архитектура и шаблоны проектирования/otus_arch_project/website/frontend/web';
	}

	location /
	{
		return 301 https://$server_name$request_uri;
	}
}

# Обработка 443 порта (SSL)
server
{
	listen 443 ssl;
	server_name otus_arch_project;

	charset utf8;

#	ssl on;

	### SSL log files ###
	access_log /var/log/nginx/otus_arch_project-ssl-access.log;
	error_log /var/log/nginx/otus_arch_project-ssl-error.log;

	### SSL cert files ###
	ssl_certificate /etc/ssl/poezd.ru.crt;
	ssl_certificate_key /etc/ssl/poezd.ru.key;

	### Add SSL specific settings here ###
	keepalive_timeout 60;

	ssl_session_cache shared:SSL:1m;
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_prefer_server_ciphers on;
	ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:-MEDIUM:-LOW:-SSLv2:+EXP;

	error_page 500 502 503 504 /50x.html;

	location = /50x.html
	{
		root /usr/share/nginx/html;
	}

	location /
	{
		# Allowed HTTP methods
		add_header Allow "GET, POST, PUT, PATCH, DELETE, OPTIONS" always;
		dav_methods PUT;
		dav_methods DELETE;

		real_ip_header X-Real-IP;
		real_ip_recursive on;

		# Проксируем запросы на Apache
		proxy_pass http://0.0.0.0:8080;

		### force timeouts if one of backend is died ##
		proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;

		### Set headers ####
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

		### Most PHP, Python, Rails, Java App can use this header ###
		proxy_set_header X-Forwarded-Proto https;

		### By default we don't want to redirect it ####
		proxy_redirect off;

		location ~* \.(jpg|jpeg|gif|png|ico|css|zip|tgz|gz|rar|bz2|doc|xls|exe|pdf|ppt|txt|tar|mid|midi|wav|bmp|rtf|js|mov|svg|woff|woff2|eot)$
		{
			error_page 404 /404.html;
			root '/home/andreyakor/Документы/OTUS/Архитектура и шаблоны проектирования/otus_arch_project/website/frontend/web';
		}
	}

	location /admin
	{
		real_ip_header X-Real-IP;
		real_ip_recursive on;

		# Проксируем запросы на Apache
		proxy_pass http://0.0.0.0:8080;

		### force timeouts if one of backend is died ##
		proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;

		### Set headers ####
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

		### Most PHP, Python, Rails, Java App can use this header ###
		proxy_set_header X-Forwarded-Proto https;

		### By default we don't want to redirect it ####
		proxy_redirect off;

		location ~* \.(jpg|jpeg|gif|png|ico|css|zip|tgz|gz|rar|bz2|doc|xls|exe|pdf|ppt|txt|tar|mid|midi|wav|bmp|rtf|js|mov|svg|woff|woff2|eot)$
		{
			error_page 404 /404.html;
			root '/home/andreyakor/Документы/OTUS/Архитектура и шаблоны проектирования/otus_arch_project/website/backend/web';
		}
	}

	#begin block
	#1
	if ($http_user_agent ~* LWP::Simple|BBBike|wget|msnbot|scrapbot)
	{
		return 403;
	}

	#2
	if ($request_method !~ ^(GET|POST|PUT|PATCH|DELETE|HEAD|OPTIONS)$ )
	{
		return 444;
	}

	#3
	#limit_zone slimits $binary_remote_addr 5m;
	#limit_conn slimits 5;

	#if ($limit)
	#{
	#	limit_req zone=delta burst=80 nodelay;
	#}

	limit_conn perip 100;

	#if ($slow)
	#{
	#	set $limit_rate 4k;
	#}

	#end block
}
